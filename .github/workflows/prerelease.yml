name: TestPyPI


on: push

env:
  TWINE_USERNAME: __token__
  TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
  TWINE_REPOSITORY_URL: 'https://test.pypi.org/legacy/'

jobs:
  build-and-publish:
    name: Build and publish to TestPyPI
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]
        include:
          - os: ubuntu-latest
            platform: manylinux
            python_versions: 'cp37-cp37m cp38-cp38 cp39-cp39'
          - os: macos-latest
            platform: macosx
          - os: windows-latest
            platform: win
        exclude:
          - os: ubuntu-latest
            python-version: 3.7
          - os: ubuntu-latest
            python-version: 3.9

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
          channel-priority: true

      - name: Show conda installation info
        run: |
          conda info
          conda list

      - name: Install build environment
        run: pip install twine wheel numpy cython

      - name: Build macosx/win Python wheels
        if: matrix.os == 'macos-latest' || matrix.os == 'windows-latest'
        run: |
          conda install mamba
          mamba install --file=requirements.txt
          python setup.py bdist_wheel

      - name: Build manylinux Python wheels
        if: matrix.os == 'ubuntu-latest'
        uses: RalfG/python-wheels-manylinux-build@v0.3.3-manylinux2010_x86_64
        with:
          python-versions: ${{ matrix.python_versions }}
          build-requirements: 'cython numpy'
        
 
  build-and-publish-aarch64:
    name: Build and publish aarch64 wheels to TestPyPI
    runs-on: [ubuntu-latest]

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install build environment
        run: pip install twine wheel numpy cython

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1

      - name: Build manylinux Python aarch64 wheels
        uses: RalfG/python-wheels-manylinux-build@v0.3.4-manylinux2014_aarch64
        with:
          python-versions: 'cp37-cp37m cp38-cp38 cp39-cp39'
          build-requirements: 'cython numpy'

      - name: Upload distributions
        run: twine upload --skip-existing dist/*-${{ matrix.platform }}*.whl
